version: '3.8'

services:
  # MySQL主库
  mysql-master:
    image: mysql:8.0
    container_name: chat-mysql-master
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: chat_app
      MYSQL_USER: chatuser
      MYSQL_PASSWORD: chatpassword
    ports:
      - "3316:3306"
    volumes:
      - mysql_master_data:/var/lib/mysql
      - ./chat-server/scripts/mysql/master.cnf:/etc/mysql/conf.d/master.cnf
      - ./chat-server/scripts/mysql/init-master.sql:/docker-entrypoint-initdb.d/init-master.sql
    command: --server-id=1 --log-bin=mysql-bin --binlog-format=ROW
    networks:
      - chat-network

  # MySQL从库1
  mysql-slave1:
    image: mysql:8.0
    container_name: chat-mysql-slave1
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: chat_app
      MYSQL_USER: chatuser
      MYSQL_PASSWORD: chatpassword
    ports:
      - "3317:3306"
    volumes:
      - mysql_slave1_data:/var/lib/mysql
      - ./chat-server/scripts/mysql/slave.cnf:/etc/mysql/conf.d/slave.cnf
    command: --server-id=2 --relay-log=mysql-relay-bin --read-only=1
    depends_on:
      - mysql-master
    networks:
      - chat-network

  # MySQL从库2
  mysql-slave2:
    image: mysql:8.0
    container_name: chat-mysql-slave2
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: chat_app
      MYSQL_USER: chatuser
      MYSQL_PASSWORD: chatpassword
    ports:
      - "3318:3306"
    volumes:
      - mysql_slave2_data:/var/lib/mysql
      - ./chat-server/scripts/mysql/slave.cnf:/etc/mysql/conf.d/slave.cnf
    command: --server-id=3 --relay-log=mysql-relay-bin --read-only=1
    depends_on:
      - mysql-master
    networks:
      - chat-network

  # 分片数据库 - Shard 0
  mysql-shard0:
    image: mysql:8.0
    container_name: chat-mysql-shard0
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: chat_app_shard_00
      MYSQL_USER: chatuser
      MYSQL_PASSWORD: chatpassword
    ports:
      - "3320:3306"
    volumes:
      - mysql_shard0_data:/var/lib/mysql
      - ./chat-server/scripts/mysql/shard.cnf:/etc/mysql/conf.d/shard.cnf
      - ./chat-server/scripts/mysql/init-shard.sql:/docker-entrypoint-initdb.d/init-shard.sql
    networks:
      - chat-network

  # 分片数据库 - Shard 1
  mysql-shard1:
    image: mysql:8.0
    container_name: chat-mysql-shard1
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: chat_app_shard_01
      MYSQL_USER: chatuser
      MYSQL_PASSWORD: chatpassword
    ports:
      - "3321:3306"
    volumes:
      - mysql_shard1_data:/var/lib/mysql
      - ./chat-server/scripts/mysql/shard.cnf:/etc/mysql/conf.d/shard.cnf
      - ./chat-server/scripts/mysql/init-shard.sql:/docker-entrypoint-initdb.d/init-shard.sql
    networks:
      - chat-network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: chat-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - chat-network

  # 聊天服务器
  chat-server:
    build:
      context: ./chat-server
      dockerfile: Dockerfile
    container_name: chat-server
    ports:
      - "9000:9000"
      - "8080:8080"  # HTTP API端口
    volumes:
      - ./chat-server/conf:/app/conf
      - ./chat-server/logs:/app/logs
    environment:
      - CONFIG_PATH=/app/conf/database.json
      - LOG_LEVEL=info
    depends_on:
      - mysql-master
      - mysql-slave1
      - mysql-slave2
      - mysql-shard0
      - mysql-shard1
      - redis
    networks:
      - chat-network

  # 数据库管理工具 - Adminer
  adminer:
    image: adminer
    container_name: chat-adminer
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql-master
    networks:
      - chat-network

  # 监控工具 - Prometheus
  prometheus:
    image: prom/prometheus
    container_name: chat-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - chat-network

  # 监控工具 - Grafana
  grafana:
    image: grafana/grafana
    container_name: chat-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - chat-network

volumes:
  mysql_master_data:
  mysql_slave1_data:
  mysql_slave2_data:
  mysql_shard0_data:
  mysql_shard1_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  chat-network:
    driver: bridge 